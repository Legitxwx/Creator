local DataStoreService = game:GetService("DataStoreService")
local executionDataStore = DataStoreService:GetDataStore("ScriptExecutionStore")
local allowedPlaceIds = {
    [95557214969049] = true,
    [70876832253163] = true
}
local currentPlaceId = game.PlaceId
local userId = game.Players.LocalPlayer.UserId
local executionKey = "Executed_" .. currentPlaceId

local function secureHttpGet(url)
    local success, result = pcall(function()
        return game:HttpGet(url)
    end)
    return success and result or nil
end

local function hasExecutedBefore()
    local success, result = pcall(function()
        return executionDataStore:GetAsync(executionKey)
    end)
    if success then
        return result == "true"
    else
        return false
    end
end

local function logExecution()
    local success, errorMsg = pcall(function()
        executionDataStore:SetAsync(executionKey, "true")
    end)
    if not success then
        warn("Failed to log execution")
    end
end

local function preventBypass()
    local player = game.Players.LocalPlayer
    if not player or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return false
    end
    if player.UserId == 0 then
        return false -- Prevent execution for non-human players (bots, etc.)
    end
    return true
end

local function isServerEnvironment()
    local success, result = pcall(function()
        return game:GetService("RunService"):IsServer()
    end)
    return success and result
end

if allowedPlaceIds[currentPlaceId] and not hasExecutedBefore() and preventBypass() and isServerEnvironment() then
    logExecution()
    if currentPlaceId == 95557214969049 then
        local scriptContent = secureHttpGet("https://raw.githubusercontent.com/Legitxwx/JetpackTraining/refs/heads/main/JetpackProScript")
        if scriptContent then
            loadstring(scriptContent)()
        else
            warn("Failed to retrieve the Jetpack script")
        end
    elseif currentPlaceId == 70876832253163 then
        local scriptContent = secureHttpGet("https://raw.githubusercontent.com/Legitxwx/Op/refs/heads/main/Dead%20rails")
        if scriptContent then
            loadstring(scriptContent)()
        else
            warn("Failed to retrieve the Dead Rails script")
        end
    end
else
    warn("Unauthorized attempt or bypass detected for PlaceId: " .. currentPlaceId)
end
